#!/usr/bin/env python3
"""–û—Ç–ª–∞–¥–∫–∞ —á—Ç–µ–Ω–∏—è Excel —Ñ–∞–π–ª–∞"""

import pandas as pd
import sys
import os

def debug_excel():
    """–û—Ç–ª–∞–¥–∫–∞ —á—Ç–µ–Ω–∏—è Excel —Ñ–∞–π–ª–∞"""
    print("üîç –û—Ç–ª–∞–¥–∫–∞ Excel —Ñ–∞–π–ª–∞...")
    
    file_path = "data/input/–≥–µ–æ–ª–æ–≥–æ—Ä–∞–∑–≤–µ–¥–∫–∞ wordstat.xlsx"
    
    try:
        # –ß–∏—Ç–∞–µ–º Excel —Ñ–∞–π–ª
        df = pd.read_excel(file_path, sheet_name=0)
        
        print(f"üìä –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Ñ–∞–π–ª–µ:")
        print(f"   –†–∞–∑–º–µ—Ä: {df.shape[0]} —Å—Ç—Ä–æ–∫, {df.shape[1]} –∫–æ–ª–æ–Ω–æ–∫")
        print(f"   –ö–æ–ª–æ–Ω–∫–∏: {list(df.columns)}")
        
        print(f"\nüìã –ü–µ—Ä–≤—ã–µ 5 —Å—Ç—Ä–æ–∫:")
        for i in range(min(5, len(df))):
            row = df.iloc[i]
            print(f"   –°—Ç—Ä–æ–∫–∞ {i}:")
            for j, (col_name, value) in enumerate(zip(df.columns, row)):
                print(f"      –ö–æ–ª–æ–Ω–∫–∞ {j} '{col_name}': {repr(value)} (—Ç–∏–ø: {type(value).__name__})")
            print()
        
        print(f"üìà –ê–Ω–∞–ª–∏–∑ –∫–æ–ª–æ–Ω–∫–∏ —Å —á–∞—Å—Ç–æ—Ç–Ω–æ—Å—Ç—å—é:")
        
        # –ò—â–µ–º –∫–æ–ª–æ–Ω–∫—É —Å —á–∏—Å–ª–∞–º–∏
        for i, col_name in enumerate(df.columns):
            col_data = df.iloc[:, i]
            numeric_count = col_data.apply(lambda x: isinstance(x, (int, float)) and not pd.isna(x)).sum()
            
            print(f"   –ö–æ–ª–æ–Ω–∫–∞ {i} '{col_name}':")
            print(f"      –ß–∏—Å–ª–æ–≤—ã—Ö –∑–Ω–∞—á–µ–Ω–∏–π: {numeric_count}")
            
            if numeric_count > 0:
                sample_numbers = col_data[col_data.apply(lambda x: isinstance(x, (int, float)) and not pd.isna(x))].head(3)
                print(f"      –ü—Ä–∏–º–µ—Ä—ã —á–∏—Å–µ–ª: {list(sample_numbers)}")
        
        # –ü—Ä–æ–±—É–µ–º —Ä–∞–∑–Ω—ã–µ —Å–ø–æ—Å–æ–±—ã —á—Ç–µ–Ω–∏—è
        print(f"\nüî¨ –¢–µ—Å—Ç–∏—Ä—É–µ–º —á—Ç–µ–Ω–∏–µ —á–∞—Å—Ç–æ—Ç–Ω–æ—Å—Ç–∏:")
        
        for i in range(min(10, len(df))):
            row = df.iloc[i]
            keyword = row.iloc[0] if len(row) > 0 else None
            frequency_raw = row.iloc[1] if len(row) > 1 else None
            
            # –ü—Ä–æ–±—É–µ–º –ø—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞—Ç—å –≤ —á–∏—Å–ª–æ
            frequency = 0
            if pd.notna(frequency_raw):
                try:
                    if isinstance(frequency_raw, (int, float)):
                        frequency = int(frequency_raw)
                    else:
                        frequency = int(float(str(frequency_raw)))
                except:
                    frequency = 0
            
            print(f"   '{keyword}': —á–∞—Å—Ç–æ—Ç–∞_raw={repr(frequency_raw)} ‚Üí frequency={frequency}")
    
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
        import traceback
        traceback.print_exc()

if __name__ == "__main__":
    debug_excel()