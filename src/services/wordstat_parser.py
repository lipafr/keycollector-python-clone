#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
–ü—Ä–æ—Å—Ç–æ–π —Ç–µ—Å—Ç - –¥–æ–±–∞–≤–ª—è–µ—Ç –≤ sys.path –∏ –∏–º–ø–æ—Ä—Ç–∏—Ä—É–µ—Ç –ø—Ä–∞–≤–∏–ª—å–Ω–æ
"""

import sys
import os

# –î–æ–±–∞–≤–ª—è–µ–º –ø–∞–ø–∫–∏ –≤ –ø—É—Ç—å –ø–æ–∏—Å–∫–∞ –º–æ–¥—É–ª–µ–π
sys.path.insert(0, os.path.join(os.path.dirname(__file__), 'src', 'services'))
sys.path.insert(0, os.path.join(os.path.dirname(__file__), 'src', 'core'))

def simple_test():
    """–ü—Ä–æ—Å—Ç–æ–π —Ç–µ—Å—Ç –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –≤—Å–µ—Ö –∫–ª—é—á–µ–≤—ã—Ö —Å–ª–æ–≤"""
    
    print("üß™ –ü–†–û–°–¢–û–ô –§–ò–ù–ê–õ–¨–ù–´–ô –¢–ï–°–¢")
    print("="*50)
    
    try:
        # –ü—Ä–æ–±—É–µ–º –∏–º–ø–æ—Ä—Ç
        print("üîç –ü–æ–ø—ã—Ç–∫–∞ –∏–º–ø–æ—Ä—Ç–∞...")
        
        # –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –Ω–∞–ø—Ä—è–º—É—é –∏–∑ –ø–∞–ø–æ–∫
        from wordstat_parser import WordstatParser
        from keyword_manager import KeywordManager, Keyword
        
        print("‚úÖ –ò–º–ø–æ—Ä—Ç—ã —É—Å–ø–µ—à–Ω—ã!")
        
        # –°–æ–∑–¥–∞–µ–º –æ–±—ä–µ–∫—Ç—ã
        parser = WordstatParser()
        manager = KeywordManager()
        
        print("‚úÖ –û–±—ä–µ–∫—Ç—ã —Å–æ–∑–¥–∞–Ω—ã!")
        
        # –ó–∞–≥—Ä—É–∂–∞–µ–º –¥–∞–Ω–Ω—ã–µ
        parser.parse_file("data/input/–≥–µ–æ–ª–æ–≥–æ—Ä–∞–∑–≤–µ–¥–∫–∞ wordstat.xlsx")
        
        print(f"üìÅ –ó–∞–≥—Ä—É–∂–µ–Ω–æ: {len(parser.keywords)} –∫–ª—é—á–µ–≤—ã—Ö —Å–ª–æ–≤")
        
        # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–µ—Ä–≤—ã–µ 3
        print(f"\nüîç –ü–µ—Ä–≤—ã–µ 3 –∫–ª—é—á–µ–≤—ã—Ö —Å–ª–æ–≤–∞:")
        for i, kw_data in enumerate(parser.keywords[:3]):
            keyword = kw_data.get('keyword', '')
            frequency = kw_data.get('frequency', 0)
            print(f"   {i+1}. '{keyword}' ‚Üí {frequency}")
        
        # –î–æ–±–∞–≤–ª—è–µ–º –í–°–ï –≤ –º–µ–Ω–µ–¥–∂–µ—Ä
        print(f"\nüöÄ –î–æ–±–∞–≤–ª—è–µ–º –≤—Å–µ –∫–ª—é—á–µ–≤—ã–µ —Å–ª–æ–≤–∞...")
        
        added = 0
        for kw_data in parser.keywords:
            keyword_text = kw_data.get('keyword', '').strip()
            frequency = kw_data.get('frequency', 0)
            
            if keyword_text:
                success = manager.add_keyword(
                    keyword=keyword_text,
                    frequency=frequency,
                    cpc=0.0
                )
                if success:
                    added += 1
        
        total = len(manager.keywords)
        
        print(f"\nüìä –†–ï–ó–£–õ–¨–¢–ê–¢–´:")
        print(f"   üìÅ –í —Ñ–∞–π–ª–µ: {len(parser.keywords)}")
        print(f"   ‚úÖ –î–æ–±–∞–≤–ª–µ–Ω–æ: {added}")
        print(f"   üéØ –í –º–µ–Ω–µ–¥–∂–µ—Ä–µ: {total}")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —á–∞—Å—Ç–æ—Ç–Ω–æ—Å—Ç—å
        print(f"\nüîç –ß–∞—Å—Ç–æ—Ç–Ω–æ—Å—Ç—å –ø–µ—Ä–≤—ã—Ö 5:")
        for i, kw in enumerate(manager.keywords[:5]):
            print(f"   {i+1}. '{kw.text}' ‚Üí {kw.frequency}")
        
        # –¢–æ–ø –ø–æ —á–∞—Å—Ç–æ—Ç–Ω–æ—Å—Ç–∏
        sorted_kw = sorted(manager.keywords, key=lambda x: x.frequency, reverse=True)
        max_freq = sorted_kw[0].frequency if sorted_kw else 0
        
        print(f"\nüèÜ –¢–æ–ø-3 –ø–æ —á–∞—Å—Ç–æ—Ç–Ω–æ—Å—Ç–∏:")
        for i, kw in enumerate(sorted_kw[:3], 1):
            print(f"   {i}. '{kw.text}' ‚Üí {kw.frequency:,}")
        
        # –ò—Ç–æ–≥
        if total == len(parser.keywords) and max_freq > 10000:
            print(f"\nüéâ –ü–û–õ–ù–´–ô –£–°–ü–ï–•!")
            print(f"   ‚úÖ –í—Å–µ {total} –∫–ª—é—á–µ–≤—ã—Ö —Å–ª–æ–≤ –¥–æ–±–∞–≤–ª–µ–Ω—ã!")
            print(f"   ‚úÖ –ß–∞—Å—Ç–æ—Ç–Ω–æ—Å—Ç—å –ø—Ä–∞–≤–∏–ª—å–Ω–∞—è: {max_freq:,}")
            return True
        elif total >= len(parser.keywords) * 0.95:
            print(f"\n‚úÖ –ü–û–ß–¢–ò –£–°–ü–ï–•!")
            print(f"   ‚úÖ {total} –∏–∑ {len(parser.keywords)} –¥–æ–±–∞–≤–ª–µ–Ω–æ (95%+)")
            print(f"   ‚úÖ –ú–∞–∫—Å–∏–º–∞–ª—å–Ω–∞—è —á–∞—Å—Ç–æ—Ç–∞: {max_freq:,}")
            return True
        else:
            print(f"\n‚ö†Ô∏è –ü–†–û–ë–õ–ï–ú–´:")
            print(f"   ‚ùå –î–æ–±–∞–≤–ª–µ–Ω–æ —Ç–æ–ª—å–∫–æ {total} –∏–∑ {len(parser.keywords)}")
            print(f"   ‚ùå –ú–∞–∫—Å–∏–º–∞–ª—å–Ω–∞—è —á–∞—Å—Ç–æ—Ç–∞: {max_freq}")
            return False
            
    except ImportError as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –∏–º–ø–æ—Ä—Ç–∞: {e}")
        
        print(f"\nüîß –ü–æ–ø—Ä–æ–±—É–µ–º –ø–ª–∞–Ω –ë...")
        
        # –ü–ª–∞–Ω –ë - –ø—Ä—è–º–æ–π –∏–º–ø–æ—Ä—Ç
        try:
            sys.path.append('src/services')
            sys.path.append('src/core')
            
            import importlib.util
            
            # –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º —Ñ–∞–π–ª—ã –Ω–∞–ø—Ä—è–º—É—é
            wordstat_spec = importlib.util.spec_from_file_location(
                "wordstat_parser", 
                "src/services/wordstat_parser.py"
            )
            wordstat_module = importlib.util.module_from_spec(wordstat_spec)
            
            keyword_spec = importlib.util.spec_from_file_location(
                "keyword_manager", 
                "src/core/keyword_manager.py"
            )
            keyword_module = importlib.util.module_from_spec(keyword_spec)
            
            print("‚úÖ –§–∞–π–ª—ã –Ω–∞–π–¥–µ–Ω—ã, –ø—Ä–æ–±—É–µ–º –∑–∞–≥—Ä—É–∑–∏—Ç—å...")
            
            return False  # –û—Å—Ç–∞–Ω–æ–≤–∏–º—Å—è –ø–æ–∫–∞ –Ω–∞ –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–µ
            
        except Exception as e:
            print(f"‚ùå –ü–ª–∞–Ω –ë —Ç–æ–∂–µ –Ω–µ —Å—Ä–∞–±–æ—Ç–∞–ª: {e}")
            
            print(f"\nüìã –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Ñ–∞–π–ª—ã:")
            print(f"   1. src/services/wordstat_parser.py - –µ—Å—Ç—å –ª–∏ –∫–ª–∞—Å—Å WordstatParser?")
            print(f"   2. src/core/keyword_manager.py - –µ—Å—Ç—å –ª–∏ –∫–ª–∞—Å—Å KeywordManager?")
            print(f"   3. –ù–µ—Ç –ª–∏ —Ü–∏–∫–ª–∏—á–µ—Å–∫–∏—Ö –∏–º–ø–æ—Ä—Ç–æ–≤ –≤ —Ñ–∞–π–ª–∞—Ö?")
            
            return False
    
    except Exception as e:
        print(f"‚ùå –î—Ä—É–≥–∞—è –æ—à–∏–±–∫–∞: {e}")
        return False


if __name__ == "__main__":
    success = simple_test()
    
    if success:
        print(f"\nüéä –¢–µ—Å—Ç —É—Å–ø–µ—à–µ–Ω!")
    else:
        print(f"\nüîß –ù—É–∂–Ω–∞ –æ—Ç–ª–∞–¥–∫–∞...")
        
        # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ –ø—Ä–æ–±–ª–µ–º–Ω–æ–≥–æ —Ñ–∞–π–ª–∞
        print(f"\nüìã –ü–µ—Ä–≤—ã–µ 10 —Å—Ç—Ä–æ–∫ wordstat_parser.py:")
        try:
            with open('src/services/wordstat_parser.py', 'r', encoding='utf-8', errors='ignore') as f:
                for i, line in enumerate(f.readlines()[:10], 1):
                    print(f"   {i:2d}: {line.rstrip()}")
        except:
            print("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø—Ä–æ—á–∏—Ç–∞—Ç—å —Ñ–∞–π–ª")